@model IEnumerable<Sistema_Matricula.Models.Docente>

@{
    ViewData["Title"] = "ListarDocente";
}

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title></title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl5/5hb5gLl1PLTT3/rxxqOWP5PlJp/5hb5gLl1PLTT3r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    </head>
<body style="align-content:start; margin-left:280px; margin-top:20px; background:#E5E5E5">

    <div class="flex">
        <p>
            <a asp-action="AgregarDocenteVM" class="bg-green-500 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded ml-5 no-underline">Nuevo Docente</a>
        </p>

        <p>
            <a id="nueva_especialidad" class="bg-yellow-500 hover:bg-yellow-400 text-white font-bold py-2 px-4 border-b-4 border-yellow-700 hover:border-yellow-500 rounded ml-5 no-underline">Nueva Especialidad</a>
        </p>
    </div>

    <div id="docente-registrado">
        @if (TempData["RegistroDocenteSuccess"] != null)
        {
            <div class="bg-green-500 text-white font-bold rounded-t px-4 py-2">
                Éxito
            </div>
            <div class="border border-t-0 border-green-400 rounded-b bg-green-100 px-4 py-3 text-green-700">
                @TempData["RegistroDocenteSuccess"]
            </div>
        }
    </div>

    <div id="docente-editado">
        @if (TempData["DocenteEditado"] != null)
        {
            <div class="bg-yellow-500 text-white font-bold rounded-t px-4 py-2">
                Éxito
            </div>
            <div class="border border-t-0 border-yellow-400 rounded-b bg-yellow-100 px-4 py-3 text-yellow-700">
                @TempData["DocenteEditado"]
            </div>
        }
    </div>
    

    <div class="layout-content-container flex flex-col w-full flex-1">
        <div class="px-4 py-3 container w-full">
            <div class="overflow-x-auto rounded-xl border border-[#D5D6DD] bg-[#F9FAFA]">
                <table class="min-w-full">
                    <thead>
                        <tr class="bg-[#FCA311]">
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.IdDocente)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.Nombre)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.Apellido)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.Edad)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.Sexo)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.Telefono)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.FechNacimiento)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.IdEspecialidad)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                @Html.DisplayNameFor(model => model.Estado)
                            </th>
                            <th class="px-4 py-3 text-left text-[#FFFFFF] text-sm font-medium leading-normal">
                                Mantenimiento
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="border-t border-t-[#D5D6DD]">
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.IdDocente)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.Nombre)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.Apellido)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.Edad)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.Sexo)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.Telefono)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.FechNacimiento)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.IdEspecialidad)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal">
                                    @Html.DisplayFor(modelItem => item.Estado)
                                </td>
                                <td class="h-[72px] px-4 py-2 text-sm font-normal leading-normal flex">

                                    <a  href="@Url.Action("EliminarDocente", "Docente", new { id = item.IdDocente })" class="flex justify-center items-center w-8 text-[#212141] bg-red-500 px-2 py-2 rounded hover:bg-red-700 mr-2 transition-colors duration-300 no-underline">
                                        <span class="material-symbols-outlined text-white text-xl-center">delete_forever</span>
                                    </a>
                                    <a id="activarEstudiante" data-id="@item.IdDocente" class="activarEstudiante flex justify-center items-center w-8 text-[#212141] bg-yellow-500 px-2 py-2 rounded hover:bg-yellow-700 transition-colors duration-300 no-underline" data-id="@item.IdDocente">
                                        <span class="material-symbols-outlined text-white text-lg">edit</span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="agregarEstudianteModal" tabindex="-1" aria-labelledby="agregarEstudianteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="agregarEstudianteModalLabel">Editar Curso</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Aquí se cargará el contenido del formulario -->
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="agregarEspecialidadModal" tabindex="-1" aria-labelledby="agregarEstudianteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="agregarEstudianteModalLabel">Nueva Especialidad</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Aquí se cargará el contenido del formulario -->
                </div>
            </div>
        </div>
    </div>
    </body>
</html>
<style>
    body {
        margin-left: 120px;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {

        //editar modal
        document.querySelectorAll('.activarEstudiante').forEach(button => {
            button.addEventListener('click', function () {
                const idDocente = this.getAttribute('data-id');
                fetch(`/Docente/EditarDocente?idDocente=${idDocente}`)
                    .then(response => response.text())
                    .then(html => {
                        document.querySelector('#agregarEstudianteModal .modal-body').innerHTML = html;
                        const modal = new bootstrap.Modal(document.getElementById('agregarEstudianteModal'));
                        modal.show();
                    })

                    .catch(error => console.error('Error al cargar contenido del modal:', error));
            });
        });

        var nueva_especialidad = document.getElementById('nueva_especialidad');
        nueva_especialidad.addEventListener('click', function () {
            console.log('click');
            fetch(`@Url.Action("CrearEspecialidadVC", "Especialidad")`)
                .then(response => response.text())
                .then(html => {
                    document.querySelector('#agregarEspecialidadModal .modal-body').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('agregarEspecialidadModal'));
                    modal.show();

                    document.getElementById('form-especialidad').addEventListener('submit', function (e) {
                        e.preventDefault();
                        var form = new FormData(this);
                        fetch('Especialidad/CrearEspecialidadVC', {
                            method: 'POST',
                            body: form
                        }).then(response => {
                            if (response.ok) {
                                
                                return response.text()
                            }
                            throw new Error('Error al crear la especialidad');;
                        })
                            .then(data => {
                                alert("Especialidad Guardada")
                                console.log(data);
                                modal.hide();
                            })
                    });

                }).catch(error => console.error('Error al cargar contenido del modal:', error));
        })

        var docenteEditado= document.getElementById('docente-editado');
        setTimeout(() => {
            docenteEditado.innerHTML = '';
        }, 3000);

        var docenteRegistrado = document.getElementById('docente-registrado');
        setTimeout(() => {
            docenteRegistrado.innerHTML = '';
        }, 3000);
        
    });
</script>