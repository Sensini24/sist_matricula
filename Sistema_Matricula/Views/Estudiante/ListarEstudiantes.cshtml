  @model IEnumerable<Sistema_Matricula.Models.Estudiante>

@{
    ViewData["Title"] = "Listar Estudiantes";
}

<html>
<head>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="" />
    <link rel="stylesheet"
          as="style"
          onload="this.rel='stylesheet'"
          href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

    <title>Estudiantes</title>

    <link rel="icon" type="image/x-icon" href="data:image/x-icon;base64," />

    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl5/5hb5gLl1PLTT3/rxxqOWP5PlJp/5hb5gLl1PLTT3r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</head>

<body style="align-content:start; margin-left:280px; margin-top:20px; background:#f4f6fa">
    
    <div class="filter-container p-4  w-full bg-white rounded-4 p-4 shadow-md">
        <h1 class="mb-2 mt-0 text-5xl font-medium leading-tight ml-6 text-[#212141]">Mantenimiento de estudiante</h1>

        <form asp-controller="Estudiante" asp-action="ListarEstudiantes" method="get" class="ml-6" id="formEstudiantes">
            <p>
                <div class="flex">
                    <input type="text" name="palabra" placeholder="Nombre..." class="form-control appearance-none block w-25 bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white">
                    <input type="number" name="codigo" placeholder="Código..." class="form-control appearance-none block w-25 bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"><br />
                    <button type="submit" value="Buscar" id="cargar" class="bg-[#FFFFFF] hover:bg-blue-400 text-black font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded ml-2 bg-green">
                        <span class="material-symbols-outlined ">
                            search
                        </span>
                    </button>
                </div>


                <select name="estado" id="estados" class="mr-4 bg-[#FFFFFF] text-[#14213D] mt-2 rounded-xl">
                    <option value="">Filtrar por Estado</option>
                    <option value="Todos">Todos</option>
                    <option value="Activo">Activo</option>
                    <option value="Inactivo">Inactivo</option>
                    <option value="Pendiente">Pendiente</option>
                </select>

            </p>
        </form>
        <div class="flex align-items-end justify-content-between">
            <a href="@Url.Action("RegistrarUsuario", "Usuario")" class="bg-green-500 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded ml-5 ">
                <span class="material-symbols-outlined">
                    person_add
                </span>
            </a>
            @* <button class="bg-gray-500 hover:bg-[#212141] text-white  text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center" id="export-excel-button" style="margin-top:2px; margin-right:25px">
            <svg class="fill-current w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z" /></svg>
            <span>Exportar a Excel</span>
            </button> *@
        </div>
        @*  <div class="layout-content-container flex flex-col w-full flex-1" >
        <div class=" container w-full"> *@

        <div id="alerta-editar-estudiantes">
            @if (TempData["EditarEstudianteSuccess"] != null)
            {
                <div class="bg-yellow-500 text-white font-bold rounded-t px-4 py-2">
                    Editado
                </div>
                <div class="border border-t-0 border-yellow-400 rounded-b bg-yellow-100 px-4 py-3 text-yellow-700">
                    @TempData["EditarEstudianteSuccess"]
                </div>
            }
        </div>
        <div id="alerta-registro-estudiantes">
            @if (TempData["RegistroEstudianteSuccess"] != null)
            {
                <div class="bg-green-500 text-white font-bold rounded-t px-4 py-2">
                    Éxito
                </div>
                <div class="border border-t-0 border-green-400 rounded-b bg-green-100 px-4 py-3 text-green-700">
                    @TempData["RegistroEstudianteSuccess"]
                </div>
            }
        </div>

        <div class="layout-content-container flex flex-col w-full flex-1">
            <div class="px-4 py-3 container w-full">
                <div class="overflow-x-auto rounded-xl border border-[#D5D6DD] bg-[#F9FAFA]">
                    <table class="min-w-full divide-y divide-gray-200 rounded-lg overflow-hidden">
                        <thead class="bg-gradient-to-r from-[#fca311] to-[#f77f00] text-white">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Codigo Estudiante</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Nombres</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Apellidos</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Sexo</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Fech. Nacimiento</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Direccion</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Estado</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">DNI</th>
                                <th class="px-6 py-3 text-left text-xs font-semibold uppercase tracking-wider">Mantenimiento</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var item in Model)
                            {
                                <tr class="hover:bg-gray-50 transition-colors">
                                    <td class="px-6 py-4 text-sm text-gray-800" id="idestudiante">
                                        @Html.DisplayFor(modelItem => item.IdEstudiante)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        @Html.DisplayFor(modelItem => item.Nombre)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        @Html.DisplayFor(modelItem => item.Apellido)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        @Html.DisplayFor(modelItem => item.Sexo)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        @Html.DisplayFor(modelItem => item.FechNacimiento)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        @Html.DisplayFor(modelItem => item.Direccion)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800" id="datoEstado">
                                        <span id="span-pintado" class="flex min-w-[84px] max-w-[480px] cursor-pointer items-center justify-center overflow-hidden rounded-full h-8 px-4 bg-[#EEEFF2] text-[#1C1D22] text-sm font-medium leading-normal w-full">
                                            @Html.DisplayFor(modelItem => item.Estado)
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        @Html.DisplayFor(modelItem => item.Dni)
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        <div class="flex justify-center space-x-2">
                                            <a id="activarEstudiante" href="@Url.Action("ActivarEstudiante", "Estudiante", new { id = item.IdEstudiante })" class="flex justify-center items-center w-8 text-white bg-green-500 px-2 py-2 rounded hover:bg-green-700 transition-colors duration-300 no-underline">
                                                <span class="material-symbols-outlined text-lg">check</span>
                                            </a>
                                            <a id="eliminarEstudiante" href="@Url.Action("EliminarEstudiante", "Estudiante", new { id = item.IdEstudiante })" class="flex justify-center items-center w-8 text-white bg-red-500 px-2 py-2 rounded hover:bg-red-700 transition-colors duration-300 no-underline">
                                                <span class="material-symbols-outlined text-lg">delete_forever</span>
                                            </a>
                                            <a class="editar-estudiante flex justify-center items-center w-8 text-white bg-yellow-500 px-2 py-2 rounded hover:bg-yellow-700 transition-colors duration-300 no-underline" data-id="@item.IdEstudiante">
                                                <span class="material-symbols-outlined text-lg">edit</span>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="agregarEstudianteModal" tabindex="-1" aria-labelledby="agregarEstudianteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="agregarEstudianteModalLabel">Editar Estudiante</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Aquí se cargará el contenido del formulario -->
                    </div>
                </div>
            </div>
        </div>
        <script>

        </script>
        </div>
            @* </div>
        </div> *@
    @* <link href="~/css/stilos.css" rel="stylesheet" /> *@
  </body>
</html>
<script>

    // ABRIR EL MODAl
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.editar-estudiante').forEach(element=> {
            element.addEventListener('click', function (event) {
                event.preventDefault();

                var idEstudiante = this.getAttribute('data-id');
                console.log(idEstudiante)
                var agregarEstudianteModal = document.getElementById('agregarEstudianteModal');
                var modalContent = agregarEstudianteModal.querySelector('.modal-body');
                fetch(`/Estudiante/CargarEditarEstudiante?idEstudiante=${idEstudiante}`)
                    .then(response => response.text())
                    .then(html => {

                        document.querySelector('#agregarEstudianteModal .modal-body').innerHTML = html;

                        var modal = new bootstrap.Modal(agregarEstudianteModal);
                        modal.show();

                        var form = modalContent.querySelector('#editarEstudianteForm');
                        if (form) {
                            form.addEventListener('submit', async (e) => {
                                e.preventDefault();
                                const formData = new FormData(form);

                                try {
                                    const response = await fetch(`/Estudiante/EditarEstudiante/${idEstudiante}`, {
                                        method: 'POST',
                                        body: formData
                                    });

                                    if (response.ok) {
                                        window.location.href = '/Estudiante/ListarEstudiantes';
                                    } else {
                                        console.error('Error al editar el estudiante:', response.status);
                                        alert('Error al editar el estudiante. Por favor, intente de nuevo.');
                                    }
                                } catch (error) {
                                    console.error('Error inesperado:', error);
                                    alert('Error inesperado al editar el estudiante. Por favor, intente de nuevo.');
                                }
                            });
                        }
                    })
                    .catch(error => console.error('Error al cargar el contenido del modal:', error));
            });
        });
    });
    //selecciona al select de estados
    var estados = document.getElementById('estados');
    //Selecciona los span donde se contiene el estado
    var span_pintado = document.querySelectorAll("#span-pintado");

    //selecciona a cada elemento estado generado
    var datoEstado = document.querySelectorAll('#datoEstado')

    span_pintado.forEach(e => {
        if (e.innerText == "Activo" || e.innerText == "activo") {
            e.style.backgroundColor = "#8ef6a7";
        }else if(e.innerText == "Pendiente"){
            e.style.backgroundColor = "#fde047"
        }
        else {
            e.style.backgroundColor = "#ec9bae";
            }
        }
    )
    // document.getElementById('export-excel-button').addEventListener('click', function () {
    //     window.location.href = '/Estudiante/PasarTablaExcel';
    // });
    

    document.addEventListener("DOMContentLoaded", function () {
        var datoEstado = document.querySelectorAll('#datoEstado span');
        datoEstado.forEach(e => {
            var estado = e.innerText.trim(); // Asegurarse de que no haya espacios en blanco
            var eliminarEstudiante = e.closest('tr').querySelector('#eliminarEstudiante');
            var activarEstudiante = e.closest('tr').querySelector('#activarEstudiante');

            if (estado === "Inactivo") {
                if (eliminarEstudiante) eliminarEstudiante.remove();
            }
            if (estado === "Activo") {
                if (activarEstudiante) activarEstudiante.remove();
            }
        });
    });


    estados.addEventListener('change', function () {
        var formEstudiantes = document.getElementById('formEstudiantes');
        formEstudiantes.submit();
    });
    

    document.getElementById('estados').addEventListener('window')
</script>
