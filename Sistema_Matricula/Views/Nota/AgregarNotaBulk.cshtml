@model Sistema_Matricula.ViewsModels.AsignacionNotasViewModel

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Portal de Asignación de Notas</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</head>
<body class="bg-gray-100 p-10" style="align-content:start; margin-left:230px; margin-top:40px; background:#f4f6fa">
    <div class="w-full mx-auto bg-white rounded-lg shadow-lg p-8">
        <div id="errorNota">
            @if (TempData["ErrorNota"] != null)
            {
                <div class="bg-red-500 text-white font-bold rounded-t px-4 py-2">
                    Observación
                </div>
                <div class="border border-t-0 border-red-400 rounded-b bg-red-100 px-4 py-3 text-red-700">
                    @TempData["ErrorNota"]
                </div>
            }
        </div>
        <div id="exitoNota">
            @if (TempData["SuccessNota"] != null)
            {
                <div class="bg-green-500 text-white font-bold rounded-t px-4 py-2">
                    Éxito
                </div>
                <div class="border border-t-0 border-green-400 rounded-b bg-green-100 px-4 py-3 text-green-700">
                    @TempData["SuccessNota"]
                </div>
            }
        </div>
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Portal de Asignación de Notas</h2>

        @using (Html.BeginForm())
        {
            @Html.HiddenFor(m => m.IdCurso, new { @class = "idCurso" })
            @Html.HiddenFor(m => m.IdDocente, new { @class = "idDocente" })
            @Html.HiddenFor(m => m.IdSeccion, new { @class = "idSeccion" })

            <div class="mb-4">
                <label class="block text-gray-700 font-semibold">Curso: @Model.NombreCurso</label>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 font-semibold">Docente: @Model.NombreDocente</label>
            </div>
            <div class="mb-6">
                <div class="mb-4">
                    @Html.LabelFor(m => m.IdBimestre, new { @class = "block text-gray-700 font-semibold mb-2" })
                    @Html.DropDownListFor(m => m.IdBimestre, (SelectList)ViewBag.Bimestres, "Seleccione un bimestre", new { @class = " form-select block w-full mt-1 rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" })
                </div>
                <div class="mb-4">
                    @Html.LabelFor(m => m.Descripcion, new { @class = "block text-gray-700 font-semibold mb-2" })
                    @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-textarea block w-full mt-1 rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50", placeholder = "Descripción" })
                </div>
            </div>

            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estudiante</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nota</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @for (int i = 0; i < Model.EstudiantesNotas.Count; i++)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @Html.HiddenFor(m => m.EstudiantesNotas[i].IdEstudiante)
                                <div class="text-sm font-medium text-gray-900">@Html.DisplayFor(m => m.EstudiantesNotas[i].NombreCompleto)</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @Html.TextBoxFor(m => m.EstudiantesNotas[i].Nota, new { @class = "form-input block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50", type = "number", step = "0.01" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="flex justify-content-between">
                <div class="mt-5">
                    <input type="submit" value="Guardar Notas" class="px-4 py-2 bg-indigo-600 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" />
                </div>

                <a id="btn-notas" class=" mt-5 px-4 py-2 bg-yellow-600 text-white font-semibold rounded-lg shadow-md hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 no-underline cursor-pointer">
                    @* @Html.ActionLink("Nota", "ListarNotas", new { id = item.IdNota,  }) *@
                    Notas Previas
                </a>
            </div>

            
        }
    </div>
    <div id="notas-estudiantes">

    </div>
</body>
</html>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        var idCurso = document.querySelector(".idCurso").value ;
        var idDocente = document.querySelector(".idDocente").value;
        var idSeccion = document.querySelector(".idSeccion").value;

        console.log(idCurso, idDocente, idSeccion)
        var btnNotas = document.getElementById("btn-notas");
        btnNotas.addEventListener("click", () => {
            fetch(`ListarNotas?idCurso=${idCurso}&idDocente=${idDocente}&idSeccion=${idSeccion}&idEstudiante`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById("notas-estudiantes").innerHTML = data;
                })
        })
        
    })
</script>
